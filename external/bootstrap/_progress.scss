//
// Progress animations
//

@keyframes progress-bar-stripes {
    from {
        background-position: $spacer-y 0;
    }
    to {
        background-position: 0 0;
    }
}


//
// Basic progress bar
//

.progress {
    display: block;
    margin-bottom: $spacer-y;
    width: 100%;
    height: $spacer-y; // todo: make a new var for this
}
.progress[value] {
    // Set overall border radius
    @include border-radius($border-radius);
    // Remove Firefox and Opera border
    border: 0;
    // Set overall background
    background-color: $progress-bg;
    // Reset the default appearance

    appearance: none;
}

// Filled-in portion of the bar
.progress[value]::-ms-fill {
    // Remove right-hand border of value bar from IE10+/Edge
    border: 0;
    background-color: $progress-bar-color;
}
.progress[value]::-moz-progress-bar {
    @include border-left-radius($border-radius);
    background-color: $progress-bar-color;
}
.progress[value]::-webkit-progress-value {
    @include border-left-radius($border-radius);
    background-color: $progress-bar-color;
}
// Tweaks for full progress bar
.progress[value='100']::-moz-progress-bar {
    @include border-right-radius($border-radius);
}
.progress[value='100']::-webkit-progress-value {
    @include border-right-radius($border-radius);
}

// Unfilled portion of the bar
.progress[value]::-webkit-progress-bar {
    @include border-radius($border-radius);
    @include box-shadow($progress-box-shadow);
    background-color: $progress-bg;
}
base::-moz-progress-bar, // Absurd-but-syntactically-valid selector to make these styles Firefox-only
.progress[value] {
    @include border-radius($border-radius);
    @include box-shadow($progress-box-shadow);
    background-color: $progress-bg;
}

// IE9 hacks to accompany custom markup. We don't need to scope this via media queries, but I feel better doing it anyway.
@media screen and (min-width:0\0) {
    .progress {
        @include border-radius($border-radius);
        @include box-shadow($progress-box-shadow);
        background-color: $progress-bg;
    }
    .progress-bar {
        @include border-left-radius($border-radius);
        display: inline-block;
        height: $spacer-y;
        background-color: $progress-bar-color;
        text-indent: -999rem; // Simulate hiding of value as in native `<progress>`
    }
    .progress[width='100%'] {
        @include border-right-radius($border-radius);
    }
}


//
// Striped
//

.progress-striped[value]::-webkit-progress-value {
    @include gradient-striped();
    background-size: $spacer-y $spacer-y;
}
.progress-striped[value]::-moz-progress-bar {
    @include gradient-striped();
    background-size: $spacer-y $spacer-y;
}
.progress-striped[value]::-ms-fill {
    @include gradient-striped();
    background-size: $spacer-y $spacer-y;
}
// IE9
@media screen and (min-width:0\0) {
    .progress-bar-striped {
        @include gradient-striped();
        background-size: $spacer-y $spacer-y;
    }
}


//
// Animated
//

.progress-animated[value]::-webkit-progress-value {
    animation: progress-bar-stripes 2s linear infinite;
}
.progress-animated[value]::-moz-progress-bar {
    animation: progress-bar-stripes 2s linear infinite;
}
// IE9
@media screen and (min-width:0\0) {
    .progress-animated .progress-bar-striped {
        animation: progress-bar-stripes 2s linear infinite;
    }
}


//
// Variations
//

.progress-success {
    @include progress-variant($progress-bar-success-bg);
}
.progress-info {
    @include progress-variant($progress-bar-info-bg);
}
.progress-warning {
    @include progress-variant($progress-bar-warning-bg);
}
.progress-danger {
    @include progress-variant($progress-bar-danger-bg);
}